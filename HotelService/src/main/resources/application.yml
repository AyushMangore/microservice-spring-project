# Configuration file for the Hotel Service

# Server configuration
server:
  port: 8082
  # Specifies the port on which the application will run (8082 in this case)

# Data Source configuration for connecting to the MySQL database
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    # JDBC URL for the MySQL database
    username: root
    # Username for authenticating to the database
    password: Anamika@123
    # Password for authenticating to the database
    driver-class-name: com.mysql.cj.jdbc.Driver
    # JDBC driver class name for MySQL (com.mysql.cj.jdbc.Driver)

  jpa:
    hibernate:
      ddl-auto: update
      # Specifies how Hibernate should handle database schema updates (here, it will update the schema)
    show-sql: true
    # Enables logging of SQL statements executed by Hibernate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        # Specifies the Hibernate dialect for MySQL version 8

  application:
    name: HOTEL-SERVICE
    # Sets the application name to HOTEL-SERVICE

  config:
    import: optional:configserver:http://localhost:8085
    # Specifies the configuration server URL for importing external configurations
    # The configurations will be fetched from the Config Server running on http://localhost:8085
    # The "optional" keyword indicates that if the Config Server is not available, the application will continue to run with its local configuration.

# Eureka configuration (commented out)
# eureka:
#   instance:
#     prefer-ip-address: true
#   client:
#     fetch-registry: true
#     register-with-eureka: true
#     service-url:
#       defaultZone: http://localhost:8761/eureka
# Configuration related to service registration and discovery with Eureka server (if used)

# Okta OAuth2 configuration
okta:
  oauth2:
    issuer: https://dev-45157491.okta.com/oauth2/default
    # The URL of the Okta authorization server
    audience: api://default
    # The audience claim for the issued tokens, specifying the resource server (API) identifier
